# 料理急先鋒 V3 設計與實施計畫
版本: 1.0
日期: 2024-07-29

## 1. 核心設計理念：嚴格分層的「物品」與「食譜」模型

此V3設計旨在徹底解決V1/V2版本中物品與食譜邏輯混亂的問題，建立一個清晰、可驗證、可擴展的遊戲核心。

### 1.1 核心原則

- **徹底分離「物品」與「食譜」**:
  - **物品 (Items)**: **名詞**。遊戲中的實體，可被庫存持有。每個物品有嚴格的層級。
  - **食譜 (Recipes)**: **動詞**。描述如何將「輸入物品」通過「烹飪方法」轉化為「輸出物品」的規則。食譜本身是無形的。

- **為「物品」定義嚴格的層級 (Strict Tiers)**:
  - **Tier 0: 基礎食材 (raw_ingredient)**
    - **定義**: 遊戲中最底層的物品，無法通過任何食譜製作。是所有加工鏈的起點。
    - **範例**: `生牛肉`, `麵粉`, `番茄`, `雞蛋`。
  - **Tier 1: 半成品 (intermediate_good)**
    - **定義**: 由 Tier 0 的「基礎食材」通過食譜加工而成的物品。
    - **範例**: `熟牛肉餅`, `麵包`, `番茄醬`, `炒蛋`。
  - **Tier 2: 最終料理 (final_dish)**
    - **定義**: 由「半成品(T1)」和/或「基礎食材(T0)」組合而成的頂層物品，用於完成訂單。
    - **範例**: `牛肉漢堡`, `番茄肉醬義大利麵`, `豪華早餐盤`。

### 1.2 食譜的合成規則

- **製作 T1 物品的規則**: 產出為 **Tier 1 (半成品)** 的食譜，其需求**只能是 Tier 0 (基礎食材)**。
  - **公式**: `Recipe(Output: T1) <= Inputs: [T0 only]`
  - **範例**: `熟牛肉餅(T1) = (煎) 生牛肉(T0)`。

- **製作 T2 物品的規則**: 產出為 **Tier 2 (最終料理)** 的食譜，其需求可以是 **Tier 1 (半成品)** 和/或 **Tier 0 (基礎食材)**。
  - **公式**: `Recipe(Output: T2) <= Inputs: [T1 and/or T0]`
  - **範例**: `牛肉漢堡(T2) = (組合) 麵包(T1) + 熟牛肉餅(T1) + 生菜(T0)`。

---

## 2. V3 資料庫結構設計

我們將創建全新的表格，與舊版本完全隔離。

### 2.1 物品表 `cook_items_v3`

```sql
CREATE TABLE cook_items_v3 (
    id SERIAL PRIMARY KEY,
    item_id VARCHAR(50) UNIQUE NOT NULL, -- 人類可讀的唯一ID，例如 'raw_beef'
    item_name VARCHAR(100) NOT NULL,
    ascii_symbol VARCHAR(10),
    -- 核心欄位：定義物品的層級
    item_tier INTEGER NOT NULL, -- 0: raw_ingredient, 1: intermediate_good, 2: final_dish
    category VARCHAR(50), -- 僅對 T0 物品有效，用於分類
    base_points INTEGER DEFAULT 0, -- 僅對 T2 物品有效，用於計分
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON COLUMN cook_items_v3.item_tier IS '0: 基礎食材, 1: 半成品, 2: 最終料理';
COMMENT ON COLUMN cook_items_v3.category IS '物品分類，僅對T0有效。例如：肉類, 蔬菜, 加工品, 調味醬料';
```

### 2.2 食譜表 `cook_recipes_v3`

```sql
CREATE TABLE cook_recipes_v3 (
    id SERIAL PRIMARY KEY,
    recipe_id VARCHAR(50) UNIQUE NOT NULL, -- 人類可讀的唯一ID，例如 'cook_beef_patty'
    recipe_name VARCHAR(100) NOT NULL,
    -- 核心欄位：指向 cook_items_v3 的外鍵
    output_item_id INTEGER NOT NULL REFERENCES cook_items_v3(id),
    cooking_method VARCHAR(20) NOT NULL, -- e.g., 'grill', 'pan_fry', 'assembly'
    -- 核心欄位：JSONB 格式儲存需求
    requirements JSONB NOT NULL, -- e.g., '[{"item_id": 1, "quantity": 1}, {"item_id": 5, "quantity": 2}]'
    cook_time_sec INTEGER DEFAULT 30,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
```

---

## 3. V3 管理後台頁面設計 (`cook-admin-recipes-v3.html`)

這個新頁面是成功實施 V3 模型的關鍵工具。

### 3.1 頁面目標

- 提供一個統一的介面來管理 V3 的「物品」和「食譜」
- 通過 UI 設計和交互邏輯，強制用戶遵循 V3 的分層規則
- 提供清晰的資料關聯性提示，避免誤操作

### 3.2 頁面佈局與功能

#### 3.2.1 整體佈局
- 頂部導航欄：切換「物品管理」和「食譜管理」
- 匯出功能：一鍵匯出所有 SQL 語句
- 分頁式設計：物品和食譜分開管理，避免混淆

#### 3.2.2 物品管理區
- **格狀顯示**：每個物品以卡片形式展示，包含：
  - 物品名稱和 ID
  - ASCII 符號預覽
  - T0 物品將按分類 (Category) 進行分組展示。
  - 物品層級（T0/T1/T2）
  - 基礎分數（僅 T2）
  - 編輯和刪除按鈕

- **新增物品**：
  1. 點擊右上角「新增物品」按鈕
  2. 填寫表單：
     - 物品 ID（英文小寫+底線）
     - 物品名稱（中文）
     - ASCII 符號（即時預覽）
     - 物品分類（僅 T0 物品需要選擇，例如: 肉類, 蔬菜...）
     - 選擇層級（T0/T1/T2）
     - 基礎分數（T2 必填）

- **編輯物品**：
  - 安全限制：
    - 不可修改物品 ID（避免破壞關聯）
    - 不可修改物品層級
    - 僅可修改：名稱、符號、分類（T0）、基礎分數（T2）
  - 關聯提示：
    - T0 物品：顯示相關的 T1 和 T2 食譜
    - T1 物品：顯示相關的 T2 食譜
    - T2 物品：無限制

- **刪除物品**：
  - 強制順序：必須從高層級開始刪除
  - 安全檢查：
    - T0：檢查是否用於 T1/T2 食譜
    - T1：檢查是否用於 T2 食譜
    - T2：可直接刪除

#### 3.2.3 食譜管理區
- **格狀顯示**：每個食譜以卡片形式展示，分為：
  - T1 食譜區（半成品）
  - T2 食譜區（最終料理）

- **食譜卡片內容**：
  - 食譜名稱和 ID
  - 產出物品
  - 烹飪方法（帶圖標）
  - 需求清單（含物品層級標記）
  - 烹飪時間
  - 編輯和刪除按鈕

- **新增食譜**：
  1. 點擊「新增食譜」按鈕
  2. 填寫表單：
     - 食譜 ID 和名稱
     - 選擇產出物品（決定食譜層級）
     - 選擇烹飪方法
     - 添加需求物品（智能過濾）
     - 設定烹飪時間

- **智能限制**：
  - T1 食譜：
    - 只能選擇 T1 物品作為產出
    - 需求只能選擇 T0 物品
  - T2 食譜：
    - 只能選擇 T2 物品作為產出
    - 需求可選擇 T0 和 T1 物品
    - 自動設置烹飪方法為「組合」

### 3.3 資料完整性保護

#### 3.3.1 編輯保護
- **物品編輯**：
  - 禁止修改關鍵屬性（ID、層級）
  - 修改時顯示關聯警告
  - 實時預覽變更效果

- **食譜編輯**：
  - 智能過濾可選物品
  - 自動驗證需求合法性
  - 防止循環依賴

#### 3.3.2 刪除保護
- **強制順序**：T2 → T1 → T0
- **關聯檢查**：
  - 刪除物品前檢查食譜引用
  - 顯示詳細的關聯信息
  - 提供清晰的錯誤提示

### 3.4 使用建議

1. **新增順序**：
   - 先添加所有 T0 基礎食材
   - 再創建 T1 物品和對應食譜
   - 最後添加 T2 物品和食譜

2. **編輯注意**：
   - 修改物品前先查看關聯警告
   - 謹慎修改被多個食譜使用的物品
   - 需要大規模修改時，建議先匯出備份

3. **刪除流程**：
   - 檢查並記錄相關依賴
   - 從最高層級開始刪除
   - 確認刪除不會影響其他物品/食譜

4. **資料維護**：
   - 定期使用匯出功能備份數據
   - 保持物品和食譜 ID 的命名規範
   - 及時更新物品說明和符號

---

## 4. 實施步驟 (Implementation Steps)

1.  **創建新文件**: 在 `public/` 目錄下創建 `cook-v3-design-and-plan.txt` (即本文件)。
2.  **執行 SQL**: 在 PostgreSQL 資料庫中執行 `CREATE TABLE` 語句，創建 `cook_items_v3` 和 `cook_recipes_v3` 表。
3.  **創建新管理頁面**: 根據本計劃第3節的設計，創建 `public/cook-admin-recipes-v3.html` 文件，並編寫其 HTML, CSS, 和 JavaScript 邏輯。
4.  **開發新後端 API**: 在 `cook-kitchen-rush.js` (或新的V3模組) 中，創建處理 `/cook-api/v3/*` 的路由。這些 API 端點必須包含 V3 規則驗證邏輯。
5.  **數據錄入 (Data Entry)**: 使用新建的 `cook-admin-recipes-v3.html` 頁面，開始逐一、正確地錄入所有 V3 版本的物品和食譜。
6.  **更新遊戲邏輯**: 修改遊戲前端和後端的核心邏輯，使其讀取 `_v3` 表格來進行遊戲。
7.  **歸檔舊版本**: 在確認 V3 系統穩定運行後，可以將 V1/V2 的表格和相關程式碼歸檔或移除。 

---

## 5. 輔助工具與視覺化系統

為確保 V3 模型的正確實施和維護，我們將開發以下輔助工具：

### 5.1 食譜驗證工具

```
+---------------------------------------------+
|    料理急先鋒 V3 - 食譜驗證工具             |
+---------------------------------------------+
| 選擇食譜: [牛肉漢堡▼]                      |
|                                             |
| 食譜層級: T2 (最終料理)                     |
|                                             |
| 合成路徑檢查:                               |
|                                             |
|   T0: 生牛肉 --煎--> T1: 熟牛肉餅           |
|                       |                     |
|   T0: 麵粉 --烤--> T1: 麵包                 |
|                       |                     |
|   T0: 生菜 ----------+|                     |
|                       |                     |
|                       V                     |
|                 T2: 牛肉漢堡                |
|                                             |
| ✓ 合成路徑有效                              |
| ✓ 符合 V3 層級規則                          |
| ✓ 所有原料可獲得                            |
+---------------------------------------------+
```

此工具可以：
- 視覺化展示單個食譜的完整合成路徑
- 自動檢查是否符合 V3 的層級規則
- 驗證所有原料是否都有獲取途徑
- 提供合成步驟的最佳順序建議

### 5.2 批量驗證系統

```
+---------------------------------------------+
|    料理急先鋒 V3 - 批量驗證系統             |
+---------------------------------------------+
| 驗證範圍: [全部食譜▼]                       |
|                                             |
| [開始驗證]                                  |
|                                             |
| 驗證結果:                                   |
| ✓ 已驗證: 32/35 食譜符合 V3 規則            |
| ✗ 問題食譜:                                 |
|   - 海鮮燉飯: T2產出使用了T2輸入(錯誤)      |
|   - 什錦沙拉: 缺少T1中間產物(不完整)        |
|   - 炸雞套餐: 烹飪方法不匹配(邏輯錯誤)      |
|                                             |
| [匯出報告] [自動修正建議]                   |
+---------------------------------------------+
```

此系統能夠：
- 一次性檢查所有食譜的合規性
- 自動識別違反 V3 規則的食譜
- 提供詳細的錯誤報告和修正建議
- 支持批量匯出和報告生成

### 5.3 視覺化食譜關係圖

```
+---------------------------------------------+
|    料理急先鋒 V3 - 食譜關係圖               |
+---------------------------------------------+
|                                             |
|  T0(基礎食材)   T1(半成品)    T2(最終料理)  |
|  +---------+    +--------+    +---------+   |
|  | 生牛肉  |---→| 熟牛肉餅|--→|牛肉漢堡 |   |
|  +---------+    +--------+    +---------+   |
|       |              ↑            ↑         |
|       |         +--------+       |         |
|       +------→ | 牛肉醬  |-------+         |
|                +--------+                   |
|  +---------+    +--------+    +---------+   |
|  | 麵粉    |---→| 麵包    |--→|牛肉漢堡 |   |
|  +---------+    +--------+    +---------+   |
|                                             |
|  +---------+                 +---------+   |
|  | 生菜    |-----------------→|牛肉漢堡 |   |
|  +---------+                 +---------+   |
|                                             |
| [放大] [縮小] [匯出PNG] [篩選: 漢堡系列▼]   |
+---------------------------------------------+
```

此工具提供：
- 直觀的物品層級和關係可視化
- 互動式圖表，支持放大、縮小和篩選
- 突出顯示特定食譜的所有相關物品和路徑
- 支持匯出為圖片或文檔格式

### 5.4 食譜模擬器

```
+---------------------------------------------+
|    料理急先鋒 V3 - 食譜模擬器               |
+---------------------------------------------+
|                                             |
| 玩家庫存:                                   |
| [生牛肉] [麵粉] [生菜] [番茄] [雞蛋]        |
|                                             |
| 工作站:                                     |
| [烤爐] [煎鍋] [組合台]                      |
|                                             |
| 模擬步驟:                                   |
| 1. 將[生牛肉]放入[煎鍋] → 得到[熟牛肉餅]    |
| 2. 將[麵粉]放入[烤爐] → 得到[麵包]          |
| 3. 將[熟牛肉餅]+[麵包]+[生菜]放入[組合台]   |
|    → 得到[牛肉漢堡]                         |
|                                             |
| 可完成訂單:                                 |
| ✓ 牛肉漢堡 (T2) - 預計得分: 150分           |
| ✗ 起司漢堡 (T2) - 缺少材料: [起司片]        |
|                                             |
| [重置模擬] [儲存此解法] [分享解法]          |
+---------------------------------------------+
```

此模擬器可以：
- 模擬完整的遊戲烹飪流程
- 測試不同食材組合和烹飪順序
- 計算最佳解法和得分
- 提供玩家教學和策略指導

### 5.5 數據分析與平衡工具

此工具將分析遊戲數據，確保：
- 所有食譜的難度與獎勵平衡
- 各層級物品的獲取難度合理
- 不同烹飪路徑的時間和效率平衡
- 自動提出平衡性調整建議

這些工具將大幅提高 V3 系統的可用性和穩定性，幫助開發團隊和管理員確保遊戲邏輯的正確性，同時也能作為玩家的輔助工具，提升遊戲體驗。 